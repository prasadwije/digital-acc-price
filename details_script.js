/**
 * Digital Account Price List - Details Page Script (Final Clean Version)
 * Fetches data from Cloudflare Proxy and displays detailed plan cards for a single tool.
 * All Local Storage Caching Logic has been removed.
 */

document.addEventListener('DOMContentLoaded', () => {
    // üî• 1. CONFIGURATION VARIABLES
    const DATA_URL = 'https://price-list-cache-proxy.prasadsandaruwan85.workers.dev/';
    
    const container = document.getElementById('plans-container');
    const toolNameHeader = document.getElementById('tool-name-header');
    
    // URL ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä Tool Name ‡∑É‡∑Ñ Role ‡∂ë‡∂ö ‡∂Ω‡∂∂‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
    const urlParams = new URLSearchParams(window.location.search);
    const toolName = urlParams.get('tool');
    const role = urlParams.get('role');
    const isReseller = role === 'reseller'; 
    
    // Back Link ‡∂ë‡∂ö ‡∑É‡∂ö‡∑É‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    const backLink = document.querySelector('.back-link'); // Class ‡∂ë‡∂ö ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠ ‡∂ö‡∂ª‡∂∫‡∑í
    if (backLink) {
        // Back Link ‡∂ë‡∂ö ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í Reseller/Customer URL ‡∂ë‡∂ö‡∂ß ‡∂∫‡∑Ä‡∂∫‡∑í
        backLink.href = isReseller ? 'index.html?role=reseller' : 'index.html';
    }


    if (!toolName) {
        toolNameHeader.textContent = '‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∑É‡∂∂‡∑ê‡∂≥‡∑í‡∂∫ (Invalid Link)';
        container.innerHTML = '<p style="text-align: center;">‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∂∂‡∑ê‡∂Ω‡∑ì‡∂∏‡∂ß Tool ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±.</p>';
        hideLoader(); // Error ‡∂ë‡∂ö‡∂ö‡∂Ø‡∑ì Loader ‡∂ë‡∂ö Hide ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        return;
    }

    // Tool Name ‡∂ë‡∂ö Header ‡∂ë‡∂ö‡∂ß ‡∂Ø‡∑ê‡∂∏‡∑ì‡∂∏
    toolNameHeader.textContent = `${toolName} Plans`;
    
    // Header ‡∂ë‡∂ö‡∑ö Title ‡∂ë‡∂ö ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    const detailTitle = document.getElementById('detail-title');
    detailTitle.textContent = isReseller ? `${toolName} - Reseller Prices` : `${toolName} - Customer Prices`;

    // ----------------------------------------------------
    // üî• RENDER LOGIC
    // ----------------------------------------------------

    // ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∂± ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± function ‡∂ë‡∂ö
    function renderPlans(data) {
        const pricesData = data.prices || data; 

        // 3. ‡∂Ö‡∂Ø‡∑è‡∑Ö Tool ‡∂ë‡∂ö‡∂ß ‡∑Ä‡∑í‡∂≠‡∂ª‡∂ö‡∑ä Plans Filter ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        const plans = pricesData.filter(item => item.Tool_Name === toolName);

        if (plans.length === 0) {
            container.innerHTML = `<p style="text-align: center;">${toolName} ‡∑É‡∂≥‡∑Ñ‡∑è plans ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠.</p>`;
            return;
        }

        container.innerHTML = ''; // ‡∂¥‡∑ê‡∂ª‡∂´‡∑í content ‡∂Ö‡∂∫‡∑í‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±

        // 4. Cards Generate ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        plans.forEach(plan => {
            // Price Helper Function ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä Price/Symbol ‡∂ú‡∂±‡∑ä‡∂±‡∑Ä‡∑è (script.js ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä Load ‡∑Ä‡∑ö)
            const resellerPriceInfo = extractPriceAndSymbol(plan.Reseller_Price_LKR);
            const customerPriceInfo = extractPriceAndSymbol(plan.Customer_Price_LKR);

            const price = isReseller ? resellerPriceInfo.value : customerPriceInfo.value;
            const symbol = isReseller ? resellerPriceInfo.symbol : customerPriceInfo.symbol;
            
            const priceLabel = isReseller ? 'Reseller' : 'Price';

            const numericPrice = price;
            const numericCustomerPrice = customerPriceInfo.value;
            
            // Symbol Prefix/Suffix Logic
            const symbolIsPrefix = symbol.startsWith('$') || symbol.startsWith('‚Ç¨') || symbol.toLowerCase().startsWith('rs.');

            const resellerDisplayPrice = symbolIsPrefix 
                ? `${symbol}${numericPrice.toLocaleString('en-US')}`
                : `${numericPrice.toLocaleString('en-US')}${symbol}`;
            
            const customerDisplayPrice = customerPriceInfo.symbol.startsWith('$') || customerPriceInfo.symbol.startsWith('‚Ç¨') || customerPriceInfo.symbol.toLowerCase().startsWith('rs.')
                ? `${customerPriceInfo.symbol}${numericCustomerPrice.toLocaleString('en-US')}`
                : `${numericCustomerPrice.toLocaleString('en-US')}${customerPriceInfo.symbol}`;


            // -----------------------------------------------------------------
            // üî• WhatsApp Message ‡∂ë‡∂ö ‡∑Ñ‡∂Ø‡∂±‡∑Ä‡∑è
            // -----------------------------------------------------------------
            let messageText = `Hello! I'd like to ${isReseller ? 'Reseller Order' : 'Buy'}: `;
            // Line break fix: \n ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑Ä‡∑ô‡∂±‡∑î‡∑Ä‡∂ß \\n ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑ê‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í
            messageText += `${plan.Tool_Name} | ${plan.Plan_Tier} | ${plan.Duration_Months} | ${resellerDisplayPrice} | Ref: #${plan.Unique_ID}\n\nPlease send me the payment details.`;
            
            const encodedMessage = encodeURIComponent(messageText);
            const whatsappLink = `https://wa.me/94784653261?text=${encodedMessage}`;
            
            // üî• Reseller Copy Text (Tool Name ‡∂ë‡∂ö ‡∂ã‡∂©‡∑í‡∂±‡∑ä‡∂∏ ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂∫‡∑í)
            const toolNameHeading = `üî• ${plan.Tool_Name} - Plan Details üî•\\n\\n`; 

            // Copy Text Body: Normal Price ‡∑É‡∑Ñ Resell Price ‡∂Ø‡∑ô‡∂ö‡∂∏ ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂∫‡∑í
            const resellerAdText = `${toolNameHeading}üåü ${plan.Plan_Tier} (${plan.Subscription_Type}) üåü\\n` +
                                   `Duration: ${plan.Duration_Months}\\n` +
                                   `Normal Price: ${customerDisplayPrice}\\n` + // FIX: Normal Price
                                   `Your Price: ${resellerDisplayPrice}\\n` +    // FIX: Resell Price
                                   `Key Features: ${plan.Key_Features}\\n\\n[Add Your Contact Details Here]`;
            
            // üí• FIX: Copy Text ‡∂ë‡∂ö‡∑ö Quotes (Single/Double) ‡∑É‡∑Ñ Newlines (\\n) ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∑Ä Escape ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
            const safeResellerAdText = resellerAdText.replace(/'/g, '\\\'').replace(/"/g, '\\"').replace(/\n/g, '\\n'); 


            // üî• FIX 6: Copy Button HTML (Reseller & Customer Hidden Copy)
            const copyButtonHtml = `
                <button class="copy-plan-btn ${!isReseller ? 'hidden-copy-btn' : ''}" 
                        onclick="event.stopPropagation(); event.preventDefault(); copyToClipboard('${safeResellerAdText}')"
                        title="${isReseller ? 'Copy Plan Details' : 'Copy for Customer'}">
                    <svg class="copy-icon" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM19 21H8V7H19V21Z"/>
                    </svg>
                </button>
            `;

            const cardHtml = `
                <div class="plan-card ${plan.Subscription_Type.toLowerCase()}">
                    
                    ${copyButtonHtml}

                    <div class="header-section">
                        <span class="plan-type">${plan.Subscription_Type}</span>
                        <span class="duration">${plan.Duration_Months}</span>
                    </div>
                    
                    <h2>${plan.Plan_Tier}</h2>
                    
                    <!-- üî• FINAL PRICE DISPLAY FIX START: Show Normal Price above Reseller Price -->
                    ${isReseller ? 
                        // Reseller ‡∂±‡∂∏‡∑ä: Normal Price (Strikethrough) ‡∂ã‡∂©‡∑í‡∂±‡∑ä ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∂∫‡∑í
                        `<div class="price-section">
                            
                            <span class="original-price-display">${customerDisplayPrice}</span>
                        </div>
                        <div class="reseller-price-row">
                            <span class="price-label">${priceLabel}:</span>
                            <span class="price-value reseller-value">${resellerDisplayPrice}</span>
                        </div>`
                        :
                        // Customer ‡∂±‡∂∏‡∑ä: ‡∂ë‡∂ö‡∑ä ‡∂¥‡∑ö‡∑Ö‡∑í‡∂∫‡∂ö‡∑ä ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∂∫‡∑í
                        `<div class="price-section">
                            <span class="price-label">${priceLabel}:</span>
                            <span class="price-value">${resellerDisplayPrice}</span>
                        </div>`
                    }
                    <!-- FINAL PRICE DISPLAY FIX END -->
                    
                    <div class="features-section">
                        <p>${plan.Key_Features}</p>
                        <span class="status ${plan.Status.toLowerCase().replace(/\s/g, '_')}">${plan.Status}</span>
                    </div>
                    
                    <a href="${whatsappLink}" target="_blank" class="buy-button">
                        Buy via WhatsApp
                    </a>
                </div>
            `;
            container.innerHTML += cardHtml;
        });
        
        // Render ‡∑Ä‡∑î‡∂´‡∑è‡∂ß ‡∂¥‡∑É‡∑ä‡∑É‡∑ö Loader ‡∂ë‡∂ö Hide ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
        hideLoader();
    }

    // ----------------------------------------------------
    // FINAL FETCH LOGIC (Cloudflare Caching)
    // ----------------------------------------------------
    
    // Cache ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑î‡∂´‡∂≠‡∑ä ‡∂±‡∑ê‡∂≠‡∂≠‡∑ä, ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∂Ø‡∂≠‡∑ä‡∂≠ Fetch ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
    fetch(DATA_URL)
        .then(response => {
            if (!response.ok) throw new Error('Network response not ok');
            return response.json();
        })
        .then(data => {
            // Data ‡∂Ω‡∑ê‡∂∂‡∑î‡∂´‡∑è‡∂ß ‡∂¥‡∑É‡∑ä‡∑É‡∑ö Render ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
            renderPlans(data);
        })
        .catch(error => {
            console.error('Error fetching data:', error);
            container.innerHTML = `<p style="color: red; text-align: center;">‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä. Cloudflare Cache ‡∂ë‡∂ö ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.</p>`;
        })
        .finally(() => {
             // Loader ‡∂ë‡∂ö Hide ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
             hideLoader();
        });
});
